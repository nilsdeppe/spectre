# Distributed under the MIT License.
# See LICENSE.txt for details.

name: Deploy containers

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: Image name to push to DockerHub
        default: 'sxscollaboration/spectre'
      build_arm:
        type: boolean
        description: Build ARM container in addition to x86_64
        default: true

  workflow_call:
    inputs:
      image_name:
        type: string
        description: Image name to push to DockerHub
        default: 'sxscollaboration/spectre'
      build_arm:
        type: boolean
        description: Build ARM container in addition to x86_64
        default: true
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  docker:
    name: Build and push
    runs-on: ubuntu-latest
    environment: deploy-containers
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up emulation support
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push deploy container
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: "./containers/Dockerfile.buildenv"
          target: deploy
          tags: ${{ inputs.image_name }}:deploy,${{ inputs.image_name }}:latest
          platforms: >
            ${{ inputs.build_arm && 'linux/amd64,linux/arm64'
            || 'linux/amd64' }}
          build-args: PARALLEL_MAKE_ARG=-j4
      - name: Build and push demo container
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: "./containers/Dockerfile.buildenv"
          target: demo
          tags: ${{ inputs.image_name }}:demo
          platforms: >
            ${{ inputs.build_arm && 'linux/amd64,linux/arm64'
            || 'linux/amd64' }}
          build-args: PARALLEL_MAKE_ARG=-j4
